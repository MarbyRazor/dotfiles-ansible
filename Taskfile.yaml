version: '3'

tasks:
  developer-mode:
    desc: "Change dotfiles repo into developer modus"
    cmds:
      # echo "Note: Make sure you have installed your ssh key correctly"
      - cd $HOME/repos/dotfiles
      - "git remote set-url origin git@github.com:MarbyRazor/dotfiles-ansible.git"
      - git config user.name MarbyRazor
      - git config user.email marby.razor@web.de
    silent: true

  new-role:
    desc: "Creates a new Ansible role based on the template role"
    cmds:
      - |
        echo "Enter the name of the new role:"
        read -r role_name
        if [ -z "$role_name" ]; then
          echo "Error: No role name provided!"
          exit 1
        fi
        if [ -d "roles/$role_name" ]; then
          echo "Error: The role 'roles/$role_name' already exists!"
          exit 1
        fi
        cp -r roles/template "roles/$role_name"
        echo "The new role 'roles/$role_name' has been created!"
    silent: true

  encrypt-file:
    desc: "Encrypt a file with Ansible Vault"
    vars:
      FILE:
        sh: |
          find ./roles -type f | fzf --prompt="Select the file to encrypt: "
    cmds:
      - ansible-vault encrypt "{{.FILE}}" --vault-password-file "$HOME/.config/dotfiles/vault-password.txt"
    dir: "."

  decrypt-file:
    desc: "Decrypt a file with Ansible Vault"
    vars:
      FILE:
        sh: |
          find ./roles -type f | fzf --prompt="Select the file to decrypt: "
    cmds:
      - ansible-vault decrypt "{{.FILE}}" --vault-password-file "$HOME/.config/dotfiles/vault-password.txt"
    dir: "."

  show-file-content:
    desc: "Show file content"
    vars:
      FILE:
        sh: |
          find ./roles -type f | fzf --prompt="Select the file to show: "
    cmds:
      - cat "{{.FILE}}"
    dir: "."
  
  encrypt_string:
    desc: "Encrypt a string with Ansible Vault and copy to clipboard"
    cmds:
      - |
        echo "Enter the name of the string:"
        read -r STRING_NAME
        echo "Enter the string you want to encrypt:"
        read -r STRING_TO_ENCRYPT
        ENCRYPTED_STRING=$(ansible-vault encrypt_string --vault-password-file "$HOME/.config/dotfiles/vault-password.txt" --stdin-name $STRING_NAME <<< "$STRING_TO_ENCRYPT")
        echo "$ENCRYPTED_STRING"
        echo "$ENCRYPTED_STRING" | pbcopy
        echo "Encrypted string copied to clipboard."
